/*
 * File: node_modules_finder.h
 * Author: Federico Rinaldi - info@federicorinaldi.com
 * Description: NodeModulesFinder - An application to search and delete "node_modules" folders recursively.
 * Compilation: gcc main.c node_modules_finder.c -o node_modules_finder -o NodeModulesFinder
 * Usage: ./NodeModulesFinder
 * 
 * This program is licensed under the Apache License, Version 2.0.
 * You may obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef NODE_MODULES_MANAGER_H
#define NODE_MODULES_MANAGER_H

// Struct for node_modules directory
typedef struct {
    char path[1024];
    long size;
} NodeModulesFolder;

/*
 * Recursively searches for "node_modules" folders starting from the specified path.
 * 
 * Parameters:
 *   - path: The path from which to start the search.
 *   - folders: Pointer to an array of NodeModulesFolder structures where the found folders will be stored.
 *   - count: Pointer to an integer representing the number of found "node_modules" folders.
 *   - totalSize: Pointer to a long integer representing the total size of all found "node_modules" folders.
 * 
 * Returns:
 *   This function does not return a value. Instead, it updates the provided 'folders', 'count', and 'totalSize' parameters.
 */
void findNodeModulesFoldersRecursively(const char *path, NodeModulesFolder **folders, int *count, long *totalSize);

/*
 * Function: findNodeModulesFolders
 * ------------------------------
 * Searches for "node_modules" folders recursively starting from the specified path.
 * 
 * path: The path from which to start the search.
 * 
 * Returns: void
 */
void findNodeModulesFolders(const char *path);

/*
 * Calculate the size of a folder recursively.
 * 
 * Parameters:
 *   - path: The path of the folder whose size is to be calculated.
 * 
 * Returns:
 *   - The size of the folder in bytes.
 * 
 * Note:
 *   - If the specified path does not point to a valid folder or an error occurs during calculation,
 *     the function returns -1.
 */
long calculateFolderSize(const char *path);

/*
 * Function: deleteNodeModulesFolders
 * ------------------------------
 * This function recursively searches for and deletes all "node_modules" folders
 * within the specified directory and its subdirectories.
 *
 * path: The path of the directory from which to start the search.
 *
 * Returns: void
 */
void deleteNodeModulesFolders(const char *path);

/*
 * Recursively removes the directory specified by the given path.
 * 
 * Parameters:
 *   - path: The path of the directory to be removed.
 * 
 * Returns:
 *   - 0 if the directory is successfully removed.
 *   - -1 if an error occurs during the removal process.
 */
int removeDirectoryRecursive(const char *path);

#endif
